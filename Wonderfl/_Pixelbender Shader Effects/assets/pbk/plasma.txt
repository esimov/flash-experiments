#ifdef GL_ES
precision highp float;
#endif

uniform vec2 resolution;
uniform float time;

void main(void)
{
vec2 uv;
vec2 p = -1.0 + 2.0 * gl_FragCoord.xy / resolution.xy;
    float r = pow( pow(p.x*p.x,16.0) + pow(p.y*p.y,16.0), 1.0/16.0 );
    //float r = sqrt(dot(p,p));
    //uv.x = .5*time + 2.5/r;
    //uv.y = 1.0*atan(p.y,p.x)/3.1416;
    uv.x = .75*time+.1/r;
    uv.y = atan(p.y,p.x)/3.1416;


   float mov0 = p.x+p.y+cos(sin(time)*2.)*100.+sin(uv.x/100.)*100.;
   float mov1 = uv.x + cos(sin(time)*0.2)/100.0;
   float mov2 = p.y + sin(mov1)/200.;
   float mov3 = uv.y + sin(cos(time))*2./500.;
   float c1 = abs(sin(mov1+time)/2.+mov2/2.-mov1-mov2+time);
   float c2 = abs(sin(c1+sin(mov0/100.+time)+sin(p.y/40.+time)+sin((p.x+p.y)/100.)*3.));
   float c3 = abs(sin(c2+cos(mov1+mov2)+cos(mov2+mov3)+sin(p.x/1000.)));
   vec3 col = vec3(c1,c2,c3);
   gl_FragColor = vec4(col,1.0);
}




#ifdef GL_ES
precision highp float;
#endif

uniform vec2 resolution;
uniform float time;

void main(void)
{
vec2 uv;
vec2 p = -1.0 + 2.0 * gl_FragCoord.xy / resolution.xy;
    float r = pow( pow(p.x*p.x,16.0) + pow(p.y*p.y,16.0), 1.0/16.0 );
    //float r = sqrt(dot(p,p));
    //uv.x = .5*time + 2.5/r;
    //uv.y = 1.0*atan(p.y,p.x)/3.1416;
    uv.x = .75*time+.1/r;
    uv.y = atan(p.y,p.x)/3.1416;


   float mov0 = p.x+p.y+cos(sin(time)*2.)*100.+sin(uv.x/100.)*100.;
   float mov1 = uv.x + cos(sin(time)*0.2)/100.0;
   float mov2 = p.y + sin(mov1)/200.;
   float mov3 = uv.y*(uv.x+(sin(time)*0.2))*0.09 + sin(cos(time))*0.2/200.;
   float c1 = abs(sin(mov1+time)/2.+mov2/2.+mov1+mov2+time);
   float c2 = abs(sin(c1+sin(mov0/100.+time)+sin(p.y/40.+time)+sin((p.x+p.y)/100.)*3.));
   float c3 = abs(sin(c2+cos(mov1+mov2)+cos(mov2+mov3)))+sin(p.y/100.+time);
   vec3 col = vec3(c1,c2,c3);
   gl_FragColor = vec4(col,1.0);
}