package {	import flash.display.*;	import flash.geom.*;	import flash.events.*;	import net.hires.debug.Stats;		[SWF (backgroundColor = 0x00, width = 800, height = 600)]		public class ParticleWave extends Sprite	{		private static const NUM_PARTICLE:Number = 6000;		private var _particles:Vector.<Particle> = new Vector.<Particle>(NUM_PARTICLE, true);		private var w:Number = stage.stageWidth;		private var h:Number = stage.stageHeight;		private var _map:BitmapData = new BitmapData (w, h, false, 0x00);		private var _canvas:BitmapData = new BitmapData (w, h, false, 0x00);				public function ParticleWave():void		{			if (stage) addEventListener(Event.ADDED_TO_STAGE, init);			else removeEventListener(Event.ADDED_TO_STAGE, init);		}				private function init(e:Event):void		{			stage.align = StageAlign.TOP_LEFT;			stage.scaleMode = StageScaleMode.NO_SCALE;			stage.frameRate = 60;						for (var i:Number = 0; i< NUM_PARTICLE; i++)			{				_particles[i] = new Particle();				_particles[i].x = Math.random() * w;				_particles[i].y = Math.random() * h;			}						addChild(new Bitmap(_canvas));			addChild(new Stats());						onClick(null);			stage.addEventListener(MouseEvent.CLICK, onClick);								addEventListener(Event.ENTER_FRAME, onStartFrame);		}				private function onStartFrame(e:Event):void		{			_canvas.lock();			for (var i:Number = 0; i< NUM_PARTICLE; i++)			{				var pos:uint = _map.getPixel(_particles[i].x, _particles[i].y);				_particles[i].x += ( (pos 		& 0xff) * .015625) - 1.5;				_particles[i].y += ( (pos >> 8 	& 0xff) * .015625) - 1.5;								(_particles[i].x < 0) ? _particles[i].x += _canvas.width :					(_particles[i].x > w) ? _particles[i].x -= _canvas.width : null;				(_particles[i].y < 0) ? _particles[i].y += _canvas.height :					(_particles[i].y > h) ? _particles[i].y -= _canvas.height : null;								_canvas.setPixel(_particles[i].x, _particles[i].y, _particles[i].color);			}			_canvas.unlock();			_canvas.colorTransform(_canvas.rect, new ColorTransform(1, 1, 1, 1, -2, -2, -2));		}				private function onClick(e:MouseEvent):void		{			for (var i:Number = 0; i< NUM_PARTICLE; i++)			{				_particles[i].x = Math.random() * stage.stageWidth;				_particles[i].y = Math.random() * stage.stageHeight;				_particles[i].color = Math.floor(Math.random() * 0xFFFFFF + 0xFFFFFF);			}						_map.perlinNoise(Math.random() * 1500, Math.random() * 1500, 5, Math.random() * 1000, true, true);		}			}}class Particle {	public var x:Number = 0;	public var y:Number = 0;	public var color:uint = 0x00;}