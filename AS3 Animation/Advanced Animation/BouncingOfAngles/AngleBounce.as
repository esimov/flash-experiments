package {	import flash.events.Event;	import flash.display.Sprite;	import flash.display.Shape;	import flash.display.StageAlign;	import flash.display.StageScaleMode;	import flash.geom.Rectangle;		public class AngleBounce extends Sprite {		private var ball:Ball;		private var bounce:Number = -1;		private var gravity:Number = 0.5;		private var line:Shape = new Shape();				public function AngleBounce():void {			init();		}				private function init():void {						stage.scaleMode = StageScaleMode.NO_SCALE;			stage.align = StageAlign.TOP_LEFT;			ball = new Ball();			ball.x = stage.stageWidth/2;			ball.y = 50;			addChild(ball);						line.graphics.lineStyle(1);			line.graphics.lineTo(stage.stageWidth/2+50,0);			line.x = stage.stageWidth/2-200;			line.y = 200;			//line.rotation =30;			addChild(line);						addEventListener(Event.ENTER_FRAME, onStart);		}				private function onStart(evt:Event):void {			line.rotation = (mouseY - stage.stageHeight/2) *0.5;						//calculate distance from ball to line			ball.x += ball.vx;			ball.y += ball.vy;			ball.vy += gravity;						var distX:Number = ball.x - line.x;			var distY:Number = ball.y - line.y;			var angle:Number = line.rotation * Math.PI/180;			var cos:Number = Math.cos(angle);			var sin:Number = Math.sin(angle);			var bounds:Rectangle = line.getBounds(this);						checkBounds();						//rotate coordinate			var y1:Number = cos * distY - sin * distX;						if (ball.x > bounds.left && ball.x < bounds.right) {				if(y1 > - ball.height/2) {					//rotate coordinate					var x1:Number = cos * distX + sin * distY;										//rotate velocity					var vx1:Number = cos * ball.vx + sin * ball.vy;					var vy1:Number = cos * ball.vy - sin * ball.vx;					y1 = - ball.height/2;					vy1 *= bounce;									//rotate everything back					distX = cos * x1 - sin * y1;					distY = cos * y1 + sin * x1;					ball.vx = cos * vx1 - sin * vy1;					ball.vy = cos * vy1 + sin * vx1;					ball.x = line.x + distX;					ball.y = line.y + distY;				}			}		}				private function checkBounds():void {			if (ball.x + ball.radius > stage.stageWidth) {				ball.x = ball.radius - stage.stageWidth;				ball.vx *= bounce;			}						if (ball.x - ball.radius < 0) {				ball.x = ball.radius;				ball.vx *= bounce;			}						if (ball.y + ball.radius > stage.stageHeight) {				ball.y = ball.radius - stage.stageHeight;				ball.vy *= bounce;			}						if (ball.y - ball.radius < 0) {				ball.y = ball.radius;				ball.vy *= bounce;			}		}	}}