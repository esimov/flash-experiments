package {	import flash.events.Event;	import flash.events.KeyboardEvent;	import flash.ui.Keyboard;	import flash.display.Sprite;		[SWF (backgroundColor = 0x000000, width = 800, height = 600)]	public class Trees extends Sprite {		private var trees:Array;		private var tree:Tree;		private var numTrees:Number =100;		private var fl:Number = 250;		private var vpX:Number = stage.stageWidth/2;		private var vpY:Number = stage.stageHeight/2;		private var floor:Number = 50;		private var vz:Number = 0;		private var friction:Number = .99;				public function Trees():void {			init();		}				private function init():void {			trees = new Array;			for (var i:uint = 0; i< numTrees; i++) {				var tree:Tree = new Tree();				trees.push(tree);				tree.xpos = Math.random() * 2000 - 1000;				tree.ypos = 50;				tree.zpos = Math.random() * 10000;				addChild(tree);			}						addEventListener(Event.ENTER_FRAME, onStartEvent);			stage.addEventListener(KeyboardEvent.KEY_DOWN, onKeyPress);		}				private function onStartEvent(evt:Event):void {			for (var i:uint = 0; i< trees.length; i++) {				var tree:Tree = trees[i] as Tree;				move(tree);			}			vz *= friction;			zSort();		}				private function move(tree:Tree):void {			tree.zpos += vz;						if (tree.zpos < - fl) {				tree.zpos += 10000			}						if (tree.zpos > 10000 - fl) {				tree.zpos -= 10000;			}						var scale:Number = fl / (fl + tree.zpos);			tree.scaleX = tree.scaleY = scale;			tree.x = vpX + tree.xpos * scale;			tree.y = vpY + tree.ypos * scale;			tree.alpha = scale;					}				private function onKeyPress(evt:KeyboardEvent):void{			if (evt.keyCode == Keyboard.UP) {				vz -= 1;			}						if (evt.keyCode == Keyboard.DOWN) {				vz += 1;			}		}				private function zSort():void {			trees.sortOn ("zpos", Array.DESCENDING | Array.NUMERIC);			for (var i:uint = 0; i< trees.length; i++) {				var tree:Tree = trees[i] as Tree;				setChildIndex(tree, i);			}		}	}}