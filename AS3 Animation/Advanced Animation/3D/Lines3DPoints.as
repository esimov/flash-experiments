package {	import flash.display.Sprite;	import flash.display.StageAlign;	import flash.display.StageScaleMode;	import flash.events.Event;	import fl.motion.easing.Back;	import flash.geom.ColorTransform;	import flash.geom.Transform;		[SWF (width = 800, height = 600)]		public class Lines3DPoints extends Sprite {		private var points:Array;		private var point:Point3D;		private var numPoints:uint = 100;		private var vpX:Number = stage.stageWidth/2;		private var vpY:Number = stage.stageHeight/2;						public function Lines3DPoints():void {			stage.align = StageAlign.TOP_LEFT;			stage.scaleMode = StageScaleMode.NO_SCALE;			init();		}				private function init():void {								points = new Array();			for (var i:uint = 0; i< numPoints; i++) {				var point:Point3D = new Point3D(Math.random() * 300 - 200,												Math.random() * 300 - 200,												Math.random() * 300 - 200);								point.setVanishingPoint(vpX, vpY);				points.push(point);			}			stage.addEventListener(Event.ENTER_FRAME, onStartEvent);		}				private function onStartEvent(evt:Event):void {			var angleY:Number = (mouseX - vpX) * 0.0003;			var angleX:Number = (mouseY - vpY) * 0.0003;						for (var i:uint = 0; i< points.length; i++) {				var point:Point3D = points[i] as Point3D;				point.rotateY (angleY);				point.rotateX (angleX);			}						graphics.clear();			graphics.lineStyle(1, 0x000000);			graphics.moveTo(points[0].screenX, points[0].screenY);			for (i = 1; i< points.length; i++) {				graphics.lineTo(points[i].screenX, points[i].screenY);			}						graphics.moveTo(points[points.length-1].screenX, points[points.length-1].screenY);			graphics.lineTo(points[0].screenX, points[0].screenY);		}				private function rotateX (ball:Ball3D, angleX:Number):void {			var cosX:Number = Math.cos(angleX);			var sinX:Number = Math.sin(angleX);						var y1:Number = cosX * ball.yPos - sinX * ball.zPos;			var z1:Number = cosX * ball.zPos + sinX * ball.yPos;						ball.yPos = y1;			ball.zPos = z1;				}				private function rotateY(ball:Ball3D, angleY:Number):void {			var cosY:Number = Math.cos(angleY);			var sinY:Number = Math.sin(angleY);						var x1:Number = cosY * ball.xPos - sinY * ball.zPos;			var z1:Number = cosY * ball.zPos + sinY * ball.xPos;						ball.zPos = z1;			ball.xPos = x1;					}	}}