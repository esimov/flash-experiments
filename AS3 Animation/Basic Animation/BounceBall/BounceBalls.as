package {	import flash.display.Sprite;	import flash.events.Event;	import flash.filters.BlurFilter;	import flash.display.StageAlign;	import flash.display.StageScaleMode;		public class BounceBalls extends Sprite {		private var count:Number = 30;		private var ball:Ball;		private var bin:Array;		private var filter:BlurFilter = new BlurFilter(10, 10, 1);				public function BounceBalls():void {			bin = new Array();			for (var i:Number = 0; i<count; i++) {				ball = new Ball(Math.round(Math.random() * 10) + 10, Math.random() * 0xffffff, Math.random() * 0xffff00);				ball.x = Math.random() * stage.stageWidth;				ball.y = Math.random() * stage.stageHeight;				ball.vx = Math.random() * 10 - 5;				ball.vy = Math.random() * 10 - 5;				addChild(ball);				//ball.cacheAsBitmap = true;				//ball.filters = [filter];				bin.push(ball);			}						stage.align = StageAlign.LEFT;			stage.scaleMode = StageScaleMode.EXACT_FIT;			stage.addEventListener(Event.ENTER_FRAME, startEnterFrame);		}				private function startEnterFrame(evt:Event):void {			for (var i:Number = bin.length - 1; i>0; i--) {				var ball:Ball = Ball(bin[i]);				ball.x += ball.vx;				ball.y += ball.vy;				if (ball.x - ball.radius < 0) {					ball.x = 0 + ball.radius;					ball.vx *= -1;				}				else if (ball.x + ball.radius > stage.stageWidth) {					ball.x = stage.stageWidth - ball.radius;					ball.vx *= -1;				}				if (ball.y - ball.radius < 0) {					ball.y = 0 + ball.radius;					ball.vy *= -1;				}				else if (ball.y + ball.radius > stage.stageHeight) {					ball.y = stage.stageHeight - ball.radius;					ball.vy *= -1;				}			}		}			}}