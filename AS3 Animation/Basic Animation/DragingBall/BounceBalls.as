package {	import flash.display.Sprite;	import flash.events.Event;	import flash.filters.BlurFilter;	import flash.display.StageAlign;	import flash.display.StageScaleMode;	import flash.events.MouseEvent;		public class BounceBalls extends Sprite {				private var ball:Ball;		private var bin:Array;		var oldX:Number;		var oldY:Number;		var bounce:Number = -0.6;		var gravity:Number = 0.4;				public function BounceBalls():void {			ball = new Ball(30, Math.random() * 0xffffff, Math.random() * 0xffff00);			ball.x = Math.random() * stage.stageWidth;			ball.y = Math.random() * stage.stageHeight;			ball.vx = Math.random() * 10 - 5;			ball.vy = -10;			addChild(ball);						stage.align = StageAlign.LEFT;			stage.scaleMode = StageScaleMode.EXACT_FIT;			ball.addEventListener(MouseEvent.MOUSE_DOWN, onMousePressed);			addEventListener(Event.ENTER_FRAME, startEnterFrame);		}				private function startEnterFrame(evt:Event):void {			ball.vy +=gravity;			ball.x += ball.vx;			ball.y += ball.vy;			if (ball.x - ball.radius < 0) {				ball.x = 0 + ball.radius;				ball.vx *= bounce;			}			else if (ball.x + ball.radius > stage.stageWidth) {				ball.x = stage.stageWidth - ball.radius;				ball.vx *= bounce;			}			if (ball.y - ball.radius < 0) {				ball.y = 0 + ball.radius;				ball.vy *= bounce;				}			else if (ball.y + ball.radius > stage.stageHeight) {				ball.y = stage.stageHeight - ball.radius;				ball.vy *= bounce;			}		}						private function onMousePressed(evt:MouseEvent):void {			oldX = ball.x;			oldY = ball.y;			stage.addEventListener(MouseEvent.MOUSE_UP, onMouseRelesed);			removeEventListener(Event.ENTER_FRAME, startEnterFrame);			ball.startDrag();			addEventListener(Event.ENTER_FRAME, trackVelocity);		}				private function onMouseRelesed(evt:MouseEvent):void {			stage.removeEventListener(MouseEvent.MOUSE_UP, onMouseRelesed);			ball.stopDrag();			removeEventListener(Event.ENTER_FRAME, trackVelocity);			addEventListener(Event.ENTER_FRAME, startEnterFrame);		}				private function trackVelocity(evt:Event):void {			ball.vx = ball.x - oldX;			ball.vy = ball.y - oldY;			oldX = ball.x;			oldY = ball.y;		}	}}