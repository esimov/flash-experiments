package {	import flash.events.Event;	import flash.events.MouseEvent;	import flash.display.Sprite;	import flash.geom.Rectangle;		public class ChainBalls extends Sprite {		private var targetX:Number;		private var targetY:Number;		private var friction:Number = 0.95;		private var spring:Number = 0.05;		private var gravity:Number = 5;		private var nrBalls:Number = 10;		private var array:Array;		private var ball:Ball;		var rectangle:Rectangle = new Rectangle(0 + ball.radius, 0 + ball.radius, 												stage.stageWidth - ball.radius*2, 												stage.stageHeight - ball.radius*2);				public function ChainBalls():void {			init();		}			private function init():void {			array = new Array();			for (var i:uint = 0; i<nrBalls; i++) {				ball = new Ball(20);				array.push(ball);				ball.vx = 0;				ball.vy = 0;				addChild(ball);				ball.cacheAsBitmap = true;			addEventListener(Event.ENTER_FRAME, startEvent);					}					private function startEvent(evt:Event):void {			graphics.clear();			graphics.lineStyle(1);			graphics.moveTo(mouseX,mouseY);			moveBall(ball, mouseX, mouseY);			graphics.lineTo(array[0].x, array[0].y);				for (var i:uint = 1; i<array.length; i++) {					var ball1:Ball = Ball(array[i-1]);					var ball2:Ball = Ball(array[i]);					moveBall(ball2, ball1.x, ball1.y);					graphics.lineTo(ball2, ball1.x, ball1.y);				}					}				private function moveBall(ball:Ball, targetX:Number, targetY:Number):void {			targetX = mouseX;			targetY = mouseY;			var dx = (targetX - ball.x) * spring;			var dy = (targetY - ball.y) * spring;			ball.vx += dx;			ball.vy += dy;			ball.vy += gravity;			ball.vx *= friction;			ball.vy *= friction;			ball.x += ball.vx;			ball.y += ball.vy;		}	}}