<?xml version="1.0" encoding="UTF-8"?>
<pmd version="4.2.1" timestamp="Thu Jul 14 13:36:44 EEST 2011">
   <file name="C:/Users/simoe/Desktop/WEB Lab/_Flash Experiments/AS3 Advanced Animation/PhysicsSim/src/com/bit101/charts/BarChart.as">
      <violation beginline="33" endline="33" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.asdocs.ClassAsDocMissing" ruleset="All Flex Rules" package="com.bit101.charts" class="BarChart.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">This class ({0}) should be documented with AsDocs.. </violation>
      <violation beginline="57" endline="57" begincolumn="8" endcolumn="8" rule="adobe.ac.pmd.rules.naming.WronglyNamedVariable" ruleset="All Flex Rules" package="com.bit101.charts" class="BarChart.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">This variable (barWidth) seems to be incorrectly named. Let your creativity flow. </violation>
   </file>
   <file name="C:/Users/simoe/Desktop/WEB Lab/_Flash Experiments/AS3 Advanced Animation/PhysicsSim/src/com/bit101/charts/Chart.as">
      <violation beginline="39" endline="39" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.asdocs.ClassAsDocMissing" ruleset="All Flex Rules" package="com.bit101.charts" class="Chart.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">This class ({0}) should be documented with AsDocs.. </violation>
      <violation beginline="39" endline="39" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.sizing.TooManyFields" ruleset="All Flex Rules" package="com.bit101.charts" class="Chart.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Too many field detected (5 maximum, but 10 actually). Classes that have too many fields could be redesigned to have fewer fields, possibly  through some nested object grouping of some of the information.  For example, a class with  city/state/zipcode fields could instead have one Address field</violation>
   </file>
   <file name="C:/Users/simoe/Desktop/WEB Lab/_Flash Experiments/AS3 Advanced Animation/PhysicsSim/src/com/bit101/charts/LineChart.as">
      <violation beginline="33" endline="33" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.asdocs.ClassAsDocMissing" ruleset="All Flex Rules" package="com.bit101.charts" class="LineChart.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">This class ({0}) should be documented with AsDocs.. </violation>
   </file>
   <file name="C:/Users/simoe/Desktop/WEB Lab/_Flash Experiments/AS3 Advanced Animation/PhysicsSim/src/com/bit101/components/Accordion.as">
      <violation beginline="35" endline="35" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.asdocs.ClassAsDocMissing" ruleset="All Flex Rules" package="com.bit101.components" class="Accordion.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">This class ({0}) should be documented with AsDocs.. </violation>
      <violation beginline="73" endline="73" begincolumn="29" endcolumn="29" rule="adobe.ac.pmd.rules.performance.AvoidInstanciationInLoop" ruleset="All Flex Rules" package="com.bit101.components" class="Accordion.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Instanciating a variable in a loop can be expensive. </violation>
   </file>
   <file name="C:/Users/simoe/Desktop/WEB Lab/_Flash Experiments/AS3 Advanced Animation/PhysicsSim/src/com/bit101/components/Calendar.as">
      <violation beginline="42" endline="42" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.asdocs.ClassAsDocMissing" ruleset="All Flex Rules" package="com.bit101.components" class="Calendar.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">This class ({0}) should be documented with AsDocs.. </violation>
      <violation beginline="42" endline="42" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.sizing.TooManyFields" ruleset="All Flex Rules" package="com.bit101.components" class="Calendar.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Too many field detected (5 maximum, but 7 actually). Classes that have too many fields could be redesigned to have fewer fields, possibly  through some nested object grouping of some of the information.  For example, a class with  city/state/zipcode fields could instead have one Address field</violation>
      <violation beginline="84" endline="84" begincolumn="31" endcolumn="31" rule="adobe.ac.pmd.rules.performance.AvoidInstanciationInLoop" ruleset="All Flex Rules" package="com.bit101.components" class="Calendar.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Instanciating a variable in a loop can be expensive. </violation>
   </file>
   <file name="C:/Users/simoe/Desktop/WEB Lab/_Flash Experiments/AS3 Advanced Animation/PhysicsSim/src/com/bit101/components/CheckBox.as">
      <violation beginline="35" endline="35" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.asdocs.ClassAsDocMissing" ruleset="All Flex Rules" package="com.bit101.components" class="CheckBox.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">This class ({0}) should be documented with AsDocs.. </violation>
      <violation beginline="52" endline="52" begincolumn="19" endcolumn="19" rule="adobe.ac.pmd.rules.performance.HeavyConstructor" ruleset="All Flex Rules" package="com.bit101.components" class="CheckBox.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Constructor must be as lightweight as possible. No control statement allowed, whereas a cyclomatic complexe of 2 has been detected. The Just-In-Time compiler does not compile constructors. Make them as lightweight as possible, or move the complexity of the code to a method called by the constructor. Then the complexity will be compiled by the JIT</violation>
   </file>
   <file name="C:/Users/simoe/Desktop/WEB Lab/_Flash Experiments/AS3 Advanced Animation/PhysicsSim/src/com/bit101/components/ColorChooser.as">
      <violation beginline="50" endline="50" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.asdocs.ClassAsDocMissing" ruleset="All Flex Rules" package="com.bit101.components" class="ColorChooser.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">This class ({0}) should be documented with AsDocs.. </violation>
      <violation beginline="50" endline="50" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.sizing.TooManyFunction" ruleset="All Flex Rules" package="com.bit101.components" class="ColorChooser.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Too many methods detected (10 maximum, but 16 actually). A class with too many methods is probably a good suspect for refactoring, in order to reduce its complexity and find a way to have more fine grained objects</violation>
      <violation beginline="50" endline="50" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.sizing.TooManyFields" ruleset="All Flex Rules" package="com.bit101.components" class="ColorChooser.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Too many field detected (5 maximum, but 12 actually). Classes that have too many fields could be redesigned to have fewer fields, possibly  through some nested object grouping of some of the information.  For example, a class with  city/state/zipcode fields could instead have one Address field</violation>
      <violation beginline="78" endline="78" begincolumn="19" endcolumn="19" rule="adobe.ac.pmd.rules.performance.HeavyConstructor" ruleset="All Flex Rules" package="com.bit101.components" class="ColorChooser.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Constructor must be as lightweight as possible. No control statement allowed, whereas a cyclomatic complexe of 2 has been detected. The Just-In-Time compiler does not compile constructors. Make them as lightweight as possible, or move the complexity of the code to a method called by the constructor. Then the complexity will be compiled by the JIT</violation>
      <violation beginline="319" endline="319" begincolumn="8" endcolumn="8" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="com.bit101.components" class="ColorChooser.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. (g1). </violation>
      <violation beginline="324" endline="324" begincolumn="8" endcolumn="8" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="com.bit101.components" class="ColorChooser.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. (g2). </violation>
      <violation beginline="328" endline="328" begincolumn="24" endcolumn="24" rule="adobe.ac.pmd.rules.performance.AvoidInstanciationInLoop" ruleset="All Flex Rules" package="com.bit101.components" class="ColorChooser.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Instanciating a variable in a loop can be expensive. </violation>
   </file>
   <file name="C:/Users/simoe/Desktop/WEB Lab/_Flash Experiments/AS3 Advanced Animation/PhysicsSim/src/com/bit101/components/ComboBox.as">
      <violation beginline="153" endline="153" begincolumn="27" endcolumn="27" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="com.bit101.components" class="ComboBox.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="163" endline="163" begincolumn="29" endcolumn="29" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="com.bit101.components" class="ComboBox.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="172" endline="172" begincolumn="30" endcolumn="30" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="com.bit101.components" class="ComboBox.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="294" endline="294" begincolumn="36" endcolumn="36" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="com.bit101.components" class="ComboBox.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="299" endline="299" begincolumn="38" endcolumn="38" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="com.bit101.components" class="ComboBox.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="39" endline="39" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.asdocs.ClassAsDocMissing" ruleset="All Flex Rules" package="com.bit101.components" class="ComboBox.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">This class ({0}) should be documented with AsDocs.. </violation>
      <violation beginline="39" endline="39" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.sizing.TooManyFunction" ruleset="All Flex Rules" package="com.bit101.components" class="ComboBox.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Too many methods detected (10 maximum, but 15 actually). A class with too many methods is probably a good suspect for refactoring, in order to reduce its complexity and find a way to have more fine grained objects</violation>
      <violation beginline="39" endline="39" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.sizing.TooManyFields" ruleset="All Flex Rules" package="com.bit101.components" class="ComboBox.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Too many field detected (5 maximum, but 9 actually). Classes that have too many fields could be redesigned to have fewer fields, possibly  through some nested object grouping of some of the information.  For example, a class with  city/state/zipcode fields could instead have one Address field</violation>
   </file>
   <file name="C:/Users/simoe/Desktop/WEB Lab/_Flash Experiments/AS3 Advanced Animation/PhysicsSim/src/com/bit101/components/Component.as">
      <violation beginline="46" endline="46" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.asdocs.ClassAsDocMissing" ruleset="All Flex Rules" package="com.bit101.components" class="Component.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">This class ({0}) should be documented with AsDocs.. </violation>
      <violation beginline="53" endline="53" begincolumn="3" endcolumn="3" rule="adobe.ac.pmd.rules.css.UseCssInsteadOfEmbedMetaData" ruleset="All Flex Rules" package="com.bit101.components" class="Component.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Embed metadata detected in source code where a stylesheet may be cleaner. </violation>
      <violation beginline="71" endline="71" begincolumn="19" endcolumn="19" rule="adobe.ac.pmd.rules.performance.HeavyConstructor" ruleset="All Flex Rules" package="com.bit101.components" class="Component.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Constructor must be as lightweight as possible. No control statement allowed, whereas a cyclomatic complexe of 2 has been detected. The Just-In-Time compiler does not compile constructors. Make them as lightweight as possible, or move the complexity of the code to a method called by the constructor. Then the complexity will be compiled by the JIT</violation>
      <violation beginline="231" endline="231" begincolumn="32" endcolumn="32" rule="adobe.ac.pmd.rules.maintanability.UselessOverridenFunction" ruleset="All Flex Rules" package="com.bit101.components" class="Component.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">This method is empty. This should be removed (x). This function is not needed</violation>
      <violation beginline="239" endline="239" begincolumn="32" endcolumn="32" rule="adobe.ac.pmd.rules.maintanability.UselessOverridenFunction" ruleset="All Flex Rules" package="com.bit101.components" class="Component.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">This method is empty. This should be removed (y). This function is not needed</violation>
   </file>
   <file name="C:/Users/simoe/Desktop/WEB Lab/_Flash Experiments/AS3 Advanced Animation/PhysicsSim/src/com/bit101/components/FPSMeter.as">
      <violation beginline="36" endline="36" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.asdocs.ClassAsDocMissing" ruleset="All Flex Rules" package="com.bit101.components" class="FPSMeter.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">This class ({0}) should be documented with AsDocs.. </violation>
      <violation beginline="52" endline="52" begincolumn="19" endcolumn="19" rule="adobe.ac.pmd.rules.performance.HeavyConstructor" ruleset="All Flex Rules" package="com.bit101.components" class="FPSMeter.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Constructor must be as lightweight as possible. No control statement allowed, whereas a cyclomatic complexe of 2 has been detected. The Just-In-Time compiler does not compile constructors. Make them as lightweight as possible, or move the complexity of the code to a method called by the constructor. Then the complexity will be compiled by the JIT</violation>
   </file>
   <file name="C:/Users/simoe/Desktop/WEB Lab/_Flash Experiments/AS3 Advanced Animation/PhysicsSim/src/com/bit101/components/HBox.as">
      <violation beginline="37" endline="37" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.asdocs.ClassAsDocMissing" ruleset="All Flex Rules" package="com.bit101.components" class="HBox.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">This class ({0}) should be documented with AsDocs.. </violation>
      <violation beginline="123" endline="123" begincolumn="13" endcolumn="13" rule="adobe.ac.pmd.rules.performance.DeeplyNestedIf" ruleset="All Flex Rules" package="com.bit101.components" class="HBox.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Nested if statements are not a good design. </violation>
   </file>
   <file name="C:/Users/simoe/Desktop/WEB Lab/_Flash Experiments/AS3 Advanced Animation/PhysicsSim/src/com/bit101/components/HRangeSlider.as">
      <violation beginline="33" endline="33" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.asdocs.ClassAsDocMissing" ruleset="All Flex Rules" package="com.bit101.components" class="HRangeSlider.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">This class ({0}) should be documented with AsDocs.. </violation>
   </file>
   <file name="C:/Users/simoe/Desktop/WEB Lab/_Flash Experiments/AS3 Advanced Animation/PhysicsSim/src/com/bit101/components/HSlider.as">
      <violation beginline="33" endline="33" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.asdocs.ClassAsDocMissing" ruleset="All Flex Rules" package="com.bit101.components" class="HSlider.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">This class ({0}) should be documented with AsDocs.. </violation>
   </file>
   <file name="C:/Users/simoe/Desktop/WEB Lab/_Flash Experiments/AS3 Advanced Animation/PhysicsSim/src/com/bit101/components/HUISlider.as">
      <violation beginline="33" endline="33" begincolumn="18" endcolumn="18" rule="adobe.ac.pmd.rules.asdocs.ClassAsDocMissing" ruleset="All Flex Rules" package="com.bit101.components" class="HUISlider.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">This class ({0}) should be documented with AsDocs.. </violation>
   </file>
   <file name="C:/Users/simoe/Desktop/WEB Lab/_Flash Experiments/AS3 Advanced Animation/PhysicsSim/src/com/bit101/components/IndicatorLight.as">
      <violation beginline="38" endline="38" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.asdocs.ClassAsDocMissing" ruleset="All Flex Rules" package="com.bit101.components" class="IndicatorLight.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">This class ({0}) should be documented with AsDocs.. </violation>
      <violation beginline="38" endline="38" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.sizing.TooManyFields" ruleset="All Flex Rules" package="com.bit101.components" class="IndicatorLight.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Too many field detected (5 maximum, but 6 actually). Classes that have too many fields could be redesigned to have fewer fields, possibly  through some nested object grouping of some of the information.  For example, a class with  city/state/zipcode fields could instead have one Address field</violation>
   </file>
   <file name="C:/Users/simoe/Desktop/WEB Lab/_Flash Experiments/AS3 Advanced Animation/PhysicsSim/src/com/bit101/components/InputText.as">
      <violation beginline="36" endline="36" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.asdocs.ClassAsDocMissing" ruleset="All Flex Rules" package="com.bit101.components" class="InputText.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">This class ({0}) should be documented with AsDocs.. </violation>
      <violation beginline="51" endline="51" begincolumn="19" endcolumn="19" rule="adobe.ac.pmd.rules.performance.HeavyConstructor" ruleset="All Flex Rules" package="com.bit101.components" class="InputText.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Constructor must be as lightweight as possible. No control statement allowed, whereas a cyclomatic complexe of 2 has been detected. The Just-In-Time compiler does not compile constructors. Make them as lightweight as possible, or move the complexity of the code to a method called by the constructor. Then the complexity will be compiled by the JIT</violation>
   </file>
   <file name="C:/Users/simoe/Desktop/WEB Lab/_Flash Experiments/AS3 Advanced Animation/PhysicsSim/src/com/bit101/components/Knob.as">
      <violation beginline="37" endline="37" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.asdocs.ClassAsDocMissing" ruleset="All Flex Rules" package="com.bit101.components" class="Knob.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">This class ({0}) should be documented with AsDocs.. </violation>
      <violation beginline="37" endline="37" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.sizing.TooManyFields" ruleset="All Flex Rules" package="com.bit101.components" class="Knob.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Too many field detected (5 maximum, but 13 actually). Classes that have too many fields could be redesigned to have fewer fields, possibly  through some nested object grouping of some of the information.  For example, a class with  city/state/zipcode fields could instead have one Address field</violation>
      <violation beginline="66" endline="66" begincolumn="19" endcolumn="19" rule="adobe.ac.pmd.rules.performance.HeavyConstructor" ruleset="All Flex Rules" package="com.bit101.components" class="Knob.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Constructor must be as lightweight as possible. No control statement allowed, whereas a cyclomatic complexe of 2 has been detected. The Just-In-Time compiler does not compile constructors. Make them as lightweight as possible, or move the complexity of the code to a method called by the constructor. Then the complexity will be compiled by the JIT</violation>
      <violation beginline="79" endline="79" begincolumn="31" endcolumn="31" rule="adobe.ac.pmd.rules.maintanability.UselessOverridenFunction" ruleset="All Flex Rules" package="com.bit101.components" class="Knob.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">This method is empty. This should be removed (init). This function is not needed</violation>
      <violation beginline="229" endline="229" begincolumn="22" endcolumn="22" rule="adobe.ac.pmd.rules.sizing.TooLongFunction" ruleset="All Flex Rules" package="com.bit101.components" class="Knob.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">This function is far too long (20 maximum, but 27 actually). Violations of this rule usually indicate that the method has too much responsibility. Try to reduce the method size by creating helper methods and removing any copy/pasted code</violation>
      <violation beginline="269" endline="269" begincolumn="7" endcolumn="7" rule="adobe.ac.pmd.rules.performance.DeeplyNestedIf" ruleset="All Flex Rules" package="com.bit101.components" class="Knob.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Nested if statements are not a good design. </violation>
   </file>
   <file name="C:/Users/simoe/Desktop/WEB Lab/_Flash Experiments/AS3 Advanced Animation/PhysicsSim/src/com/bit101/components/Label.as">
      <violation beginline="38" endline="38" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.asdocs.ClassAsDocMissing" ruleset="All Flex Rules" package="com.bit101.components" class="Label.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">This class ({0}) should be documented with AsDocs.. </violation>
   </file>
   <file name="C:/Users/simoe/Desktop/WEB Lab/_Flash Experiments/AS3 Advanced Animation/PhysicsSim/src/com/bit101/components/List.as">
      <violation beginline="216" endline="216" begincolumn="27" endcolumn="27" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="com.bit101.components" class="List.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="228" endline="228" begincolumn="29" endcolumn="29" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="com.bit101.components" class="List.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="241" endline="241" begincolumn="30" endcolumn="30" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="com.bit101.components" class="List.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="346" endline="346" begincolumn="36" endcolumn="36" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="com.bit101.components" class="List.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="356" endline="356" begincolumn="38" endcolumn="38" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="com.bit101.components" class="List.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="37" endline="37" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.asdocs.ClassAsDocMissing" ruleset="All Flex Rules" package="com.bit101.components" class="List.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">This class ({0}) should be documented with AsDocs.. </violation>
      <violation beginline="37" endline="37" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.sizing.TooManyFunction" ruleset="All Flex Rules" package="com.bit101.components" class="List.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Too many methods detected (10 maximum, but 15 actually). A class with too many methods is probably a good suspect for refactoring, in order to reduce its complexity and find a way to have more fine grained objects</violation>
      <violation beginline="37" endline="37" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.sizing.TooManyFields" ruleset="All Flex Rules" package="com.bit101.components" class="List.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Too many field detected (5 maximum, but 12 actually). Classes that have too many fields could be redesigned to have fewer fields, possibly  through some nested object grouping of some of the information.  For example, a class with  city/state/zipcode fields could instead have one Address field</violation>
      <violation beginline="59" endline="59" begincolumn="19" endcolumn="19" rule="adobe.ac.pmd.rules.performance.HeavyConstructor" ruleset="All Flex Rules" package="com.bit101.components" class="List.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Constructor must be as lightweight as possible. No control statement allowed, whereas a cyclomatic complexe of 2 has been detected. The Just-In-Time compiler does not compile constructors. Make them as lightweight as possible, or move the complexity of the code to a method called by the constructor. Then the complexity will be compiled by the JIT</violation>
      <violation beginline="110" endline="110" begincolumn="29" endcolumn="29" rule="adobe.ac.pmd.rules.performance.AvoidInstanciationInLoop" ruleset="All Flex Rules" package="com.bit101.components" class="List.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Instanciating a variable in a loop can be expensive. </violation>
      <violation beginline="163" endline="163" begincolumn="7" endcolumn="7" rule="adobe.ac.pmd.rules.empty.EmptyIfStmt" ruleset="All Flex Rules" package="com.bit101.components" class="List.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">No statements in this if statement. Empty If Statement finds instances where a condition is checked but nothing is done about it</violation>
   </file>
   <file name="C:/Users/simoe/Desktop/WEB Lab/_Flash Experiments/AS3 Advanced Animation/PhysicsSim/src/com/bit101/components/ListItem.as">
      <violation beginline="37" endline="37" begincolumn="17" endcolumn="17" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="com.bit101.components" class="ListItem.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="52" endline="52" begincolumn="94" endcolumn="94" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="com.bit101.components" class="ListItem.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="157" endline="157" begincolumn="28" endcolumn="28" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="com.bit101.components" class="ListItem.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="162" endline="162" begincolumn="30" endcolumn="30" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="com.bit101.components" class="ListItem.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="35" endline="35" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.asdocs.ClassAsDocMissing" ruleset="All Flex Rules" package="com.bit101.components" class="ListItem.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">This class ({0}) should be documented with AsDocs.. </violation>
      <violation beginline="35" endline="35" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.sizing.TooManyFields" ruleset="All Flex Rules" package="com.bit101.components" class="ListItem.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Too many field detected (5 maximum, but 7 actually). Classes that have too many fields could be redesigned to have fewer fields, possibly  through some nested object grouping of some of the information.  For example, a class with  city/state/zipcode fields could instead have one Address field</violation>
   </file>
   <file name="C:/Users/simoe/Desktop/WEB Lab/_Flash Experiments/AS3 Advanced Animation/PhysicsSim/src/com/bit101/components/Meter.as">
      <violation beginline="36" endline="36" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.asdocs.ClassAsDocMissing" ruleset="All Flex Rules" package="com.bit101.components" class="Meter.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">This class ({0}) should be documented with AsDocs.. </violation>
      <violation beginline="36" endline="36" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.sizing.TooManyFields" ruleset="All Flex Rules" package="com.bit101.components" class="Meter.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Too many field detected (5 maximum, but 14 actually). Classes that have too many fields could be redesigned to have fewer fields, possibly  through some nested object grouping of some of the information.  For example, a class with  city/state/zipcode fields could instead have one Address field</violation>
      <violation beginline="171" endline="171" begincolumn="8" endcolumn="8" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="com.bit101.components" class="Meter.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. (r1). </violation>
      <violation beginline="172" endline="172" begincolumn="8" endcolumn="8" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="com.bit101.components" class="Meter.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. (r2). </violation>
      <violation beginline="196" endline="196" begincolumn="8" endcolumn="8" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="com.bit101.components" class="Meter.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. (r1). </violation>
      <violation beginline="197" endline="197" begincolumn="8" endcolumn="8" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="com.bit101.components" class="Meter.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. (r2). </violation>
      <violation beginline="198" endline="198" begincolumn="8" endcolumn="8" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="com.bit101.components" class="Meter.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. (r3). </violation>
   </file>
   <file name="C:/Users/simoe/Desktop/WEB Lab/_Flash Experiments/AS3 Advanced Animation/PhysicsSim/src/com/bit101/components/NumericStepper.as">
      <violation beginline="39" endline="39" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.asdocs.ClassAsDocMissing" ruleset="All Flex Rules" package="com.bit101.components" class="NumericStepper.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">This class ({0}) should be documented with AsDocs.. </violation>
      <violation beginline="39" endline="39" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.sizing.TooManyFunction" ruleset="All Flex Rules" package="com.bit101.components" class="NumericStepper.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Too many methods detected (10 maximum, but 11 actually). A class with too many methods is probably a good suspect for refactoring, in order to reduce its complexity and find a way to have more fine grained objects</violation>
      <violation beginline="39" endline="39" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.sizing.TooManyFields" ruleset="All Flex Rules" package="com.bit101.components" class="NumericStepper.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Too many field detected (5 maximum, but 12 actually). Classes that have too many fields could be redesigned to have fewer fields, possibly  through some nested object grouping of some of the information.  For example, a class with  city/state/zipcode fields could instead have one Address field</violation>
      <violation beginline="65" endline="65" begincolumn="19" endcolumn="19" rule="adobe.ac.pmd.rules.performance.HeavyConstructor" ruleset="All Flex Rules" package="com.bit101.components" class="NumericStepper.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Constructor must be as lightweight as possible. No control statement allowed, whereas a cyclomatic complexe of 2 has been detected. The Just-In-Time compiler does not compile constructors. Make them as lightweight as possible, or move the complexity of the code to a method called by the constructor. Then the complexity will be compiled by the JIT</violation>
   </file>
   <file name="C:/Users/simoe/Desktop/WEB Lab/_Flash Experiments/AS3 Advanced Animation/PhysicsSim/src/com/bit101/components/Panel.as">
      <violation beginline="35" endline="35" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.asdocs.ClassAsDocMissing" ruleset="All Flex Rules" package="com.bit101.components" class="Panel.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">This class ({0}) should be documented with AsDocs.. </violation>
      <violation beginline="35" endline="35" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.sizing.TooManyFields" ruleset="All Flex Rules" package="com.bit101.components" class="Panel.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Too many field detected (5 maximum, but 8 actually). Classes that have too many fields could be redesigned to have fewer fields, possibly  through some nested object grouping of some of the information.  For example, a class with  city/state/zipcode fields could instead have one Address field</violation>
   </file>
   <file name="C:/Users/simoe/Desktop/WEB Lab/_Flash Experiments/AS3 Advanced Animation/PhysicsSim/src/com/bit101/components/ProgressBar.as">
      <violation beginline="34" endline="34" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.asdocs.ClassAsDocMissing" ruleset="All Flex Rules" package="com.bit101.components" class="ProgressBar.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">This class ({0}) should be documented with AsDocs.. </violation>
   </file>
   <file name="C:/Users/simoe/Desktop/WEB Lab/_Flash Experiments/AS3 Advanced Animation/PhysicsSim/src/com/bit101/components/PushButton.as">
      <violation beginline="37" endline="37" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.asdocs.ClassAsDocMissing" ruleset="All Flex Rules" package="com.bit101.components" class="PushButton.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">This class ({0}) should be documented with AsDocs.. </violation>
      <violation beginline="37" endline="37" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.sizing.TooManyFields" ruleset="All Flex Rules" package="com.bit101.components" class="PushButton.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Too many field detected (5 maximum, but 8 actually). Classes that have too many fields could be redesigned to have fewer fields, possibly  through some nested object grouping of some of the information.  For example, a class with  city/state/zipcode fields could instead have one Address field</violation>
      <violation beginline="56" endline="56" begincolumn="19" endcolumn="19" rule="adobe.ac.pmd.rules.performance.HeavyConstructor" ruleset="All Flex Rules" package="com.bit101.components" class="PushButton.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Constructor must be as lightweight as possible. No control statement allowed, whereas a cyclomatic complexe of 2 has been detected. The Just-In-Time compiler does not compile constructors. Make them as lightweight as possible, or move the complexity of the code to a method called by the constructor. Then the complexity will be compiled by the JIT</violation>
   </file>
   <file name="C:/Users/simoe/Desktop/WEB Lab/_Flash Experiments/AS3 Advanced Animation/PhysicsSim/src/com/bit101/components/RadioButton.as">
      <violation beginline="36" endline="36" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.asdocs.ClassAsDocMissing" ruleset="All Flex Rules" package="com.bit101.components" class="RadioButton.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">This class ({0}) should be documented with AsDocs.. </violation>
      <violation beginline="36" endline="36" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.sizing.TooManyFields" ruleset="All Flex Rules" package="com.bit101.components" class="RadioButton.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Too many field detected (5 maximum, but 7 actually). Classes that have too many fields could be redesigned to have fewer fields, possibly  through some nested object grouping of some of the information.  For example, a class with  city/state/zipcode fields could instead have one Address field</violation>
      <violation beginline="56" endline="56" begincolumn="19" endcolumn="19" rule="adobe.ac.pmd.rules.performance.HeavyConstructor" ruleset="All Flex Rules" package="com.bit101.components" class="RadioButton.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Constructor must be as lightweight as possible. No control statement allowed, whereas a cyclomatic complexe of 2 has been detected. The Just-In-Time compiler does not compile constructors. Make them as lightweight as possible, or move the complexity of the code to a method called by the constructor. Then the complexity will be compiled by the JIT</violation>
      <violation beginline="72" endline="72" begincolumn="29" endcolumn="29" rule="adobe.ac.pmd.rules.maintanability.ProtectedStaticMethod" ruleset="All Flex Rules" package="com.bit101.components" class="RadioButton.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">This method (addButton) should be private. </violation>
      <violation beginline="86" endline="86" begincolumn="29" endcolumn="29" rule="adobe.ac.pmd.rules.maintanability.ProtectedStaticMethod" ruleset="All Flex Rules" package="com.bit101.components" class="RadioButton.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">This method (clear) should be private. </violation>
   </file>
   <file name="C:/Users/simoe/Desktop/WEB Lab/_Flash Experiments/AS3 Advanced Animation/PhysicsSim/src/com/bit101/components/RangeSlider.as">
      <violation beginline="38" endline="38" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.asdocs.ClassAsDocMissing" ruleset="All Flex Rules" package="com.bit101.components" class="RangeSlider.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">This class ({0}) should be documented with AsDocs.. </violation>
      <violation beginline="38" endline="38" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.sizing.TooManyFunction" ruleset="All Flex Rules" package="com.bit101.components" class="RangeSlider.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Too many methods detected (10 maximum, but 13 actually). A class with too many methods is probably a good suspect for refactoring, in order to reduce its complexity and find a way to have more fine grained objects</violation>
      <violation beginline="38" endline="38" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.sizing.TooManyFields" ruleset="All Flex Rules" package="com.bit101.components" class="RangeSlider.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Too many field detected (5 maximum, but 14 actually). Classes that have too many fields could be redesigned to have fewer fields, possibly  through some nested object grouping of some of the information.  For example, a class with  city/state/zipcode fields could instead have one Address field</violation>
      <violation beginline="75" endline="75" begincolumn="19" endcolumn="19" rule="adobe.ac.pmd.rules.performance.HeavyConstructor" ruleset="All Flex Rules" package="com.bit101.components" class="RangeSlider.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Constructor must be as lightweight as possible. No control statement allowed, whereas a cyclomatic complexe of 2 has been detected. The Just-In-Time compiler does not compile constructors. Make them as lightweight as possible, or move the complexity of the code to a method called by the constructor. Then the complexity will be compiled by the JIT</violation>
   </file>
   <file name="C:/Users/simoe/Desktop/WEB Lab/_Flash Experiments/AS3 Advanced Animation/PhysicsSim/src/com/bit101/components/RotarySelector.as">
      <violation beginline="37" endline="37" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.asdocs.ClassAsDocMissing" ruleset="All Flex Rules" package="com.bit101.components" class="RotarySelector.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">This class ({0}) should be documented with AsDocs.. </violation>
      <violation beginline="37" endline="37" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.sizing.TooManyFields" ruleset="All Flex Rules" package="com.bit101.components" class="RotarySelector.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Too many field detected (5 maximum, but 7 actually). Classes that have too many fields could be redesigned to have fewer fields, possibly  through some nested object grouping of some of the information.  For example, a class with  city/state/zipcode fields could instead have one Address field</violation>
      <violation beginline="62" endline="62" begincolumn="19" endcolumn="19" rule="adobe.ac.pmd.rules.performance.HeavyConstructor" ruleset="All Flex Rules" package="com.bit101.components" class="RotarySelector.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Constructor must be as lightweight as possible. No control statement allowed, whereas a cyclomatic complexe of 2 has been detected. The Just-In-Time compiler does not compile constructors. Make them as lightweight as possible, or move the complexity of the code to a method called by the constructor. Then the complexity will be compiled by the JIT</violation>
      <violation beginline="165" endline="165" begincolumn="28" endcolumn="28" rule="adobe.ac.pmd.rules.sizing.TooLongFunction" ruleset="All Flex Rules" package="com.bit101.components" class="RotarySelector.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">This function is far too long (20 maximum, but 29 actually). Violations of this rule usually indicate that the method has too much responsibility. Try to reduce the method size by creating helper methods and removing any copy/pasted code</violation>
      <violation beginline="187" endline="187" begincolumn="25" endcolumn="25" rule="adobe.ac.pmd.rules.performance.AvoidInstanciationInLoop" ruleset="All Flex Rules" package="com.bit101.components" class="RotarySelector.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Instanciating a variable in a loop can be expensive. </violation>
   </file>
   <file name="C:/Users/simoe/Desktop/WEB Lab/_Flash Experiments/AS3 Advanced Animation/PhysicsSim/src/com/bit101/components/ScrollBar.as">
      <violation beginline="39" endline="39" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.asdocs.ClassAsDocMissing" ruleset="All Flex Rules" package="com.bit101.components" class="ScrollBar.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">This class ({0}) should be documented with AsDocs.. </violation>
      <violation beginline="39" endline="39" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.sizing.TooManyFunction" ruleset="All Flex Rules" package="com.bit101.components" class="ScrollBar.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Too many methods detected (10 maximum, but 13 actually). A class with too many methods is probably a good suspect for refactoring, in order to reduce its complexity and find a way to have more fine grained objects</violation>
      <violation beginline="39" endline="39" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.sizing.TooManyFields" ruleset="All Flex Rules" package="com.bit101.components" class="ScrollBar.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Too many field detected (5 maximum, but 10 actually). Classes that have too many fields could be redesigned to have fewer fields, possibly  through some nested object grouping of some of the information.  For example, a class with  city/state/zipcode fields could instead have one Address field</violation>
      <violation beginline="65" endline="65" begincolumn="19" endcolumn="19" rule="adobe.ac.pmd.rules.performance.HeavyConstructor" ruleset="All Flex Rules" package="com.bit101.components" class="ScrollBar.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Constructor must be as lightweight as possible. No control statement allowed, whereas a cyclomatic complexe of 2 has been detected. The Just-In-Time compiler does not compile constructors. Make them as lightweight as possible, or move the complexity of the code to a method called by the constructor. Then the complexity will be compiled by the JIT</violation>
      <violation beginline="78" endline="78" begincolumn="31" endcolumn="31" rule="adobe.ac.pmd.rules.sizing.TooLongFunction" ruleset="All Flex Rules" package="com.bit101.components" class="ScrollBar.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">This function is far too long (20 maximum, but 31 actually). Violations of this rule usually indicate that the method has too much responsibility. Try to reduce the method size by creating helper methods and removing any copy/pasted code</violation>
      <violation beginline="491" endline="491" begincolumn="7" endcolumn="7" rule="adobe.ac.pmd.rules.performance.DeeplyNestedIf" ruleset="All Flex Rules" package="com.bit101.components" class="ScrollBar.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Nested if statements are not a good design. </violation>
      <violation beginline="503" endline="503" begincolumn="7" endcolumn="7" rule="adobe.ac.pmd.rules.performance.DeeplyNestedIf" ruleset="All Flex Rules" package="com.bit101.components" class="ScrollBar.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Nested if statements are not a good design. </violation>
      <violation beginline="519" endline="519" begincolumn="7" endcolumn="7" rule="adobe.ac.pmd.rules.performance.DeeplyNestedIf" ruleset="All Flex Rules" package="com.bit101.components" class="ScrollBar.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Nested if statements are not a good design. </violation>
      <violation beginline="531" endline="531" begincolumn="7" endcolumn="7" rule="adobe.ac.pmd.rules.performance.DeeplyNestedIf" ruleset="All Flex Rules" package="com.bit101.components" class="ScrollBar.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Nested if statements are not a good design. </violation>
   </file>
   <file name="C:/Users/simoe/Desktop/WEB Lab/_Flash Experiments/AS3 Advanced Animation/PhysicsSim/src/com/bit101/components/ScrollPane.as">
      <violation beginline="38" endline="38" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.asdocs.ClassAsDocMissing" ruleset="All Flex Rules" package="com.bit101.components" class="ScrollPane.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">This class ({0}) should be documented with AsDocs.. </violation>
   </file>
   <file name="C:/Users/simoe/Desktop/WEB Lab/_Flash Experiments/AS3 Advanced Animation/PhysicsSim/src/com/bit101/components/Slider.as">
      <violation beginline="38" endline="38" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.asdocs.ClassAsDocMissing" ruleset="All Flex Rules" package="com.bit101.components" class="Slider.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">This class ({0}) should be documented with AsDocs.. </violation>
      <violation beginline="38" endline="38" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.sizing.TooManyFunction" ruleset="All Flex Rules" package="com.bit101.components" class="Slider.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Too many methods detected (10 maximum, but 12 actually). A class with too many methods is probably a good suspect for refactoring, in order to reduce its complexity and find a way to have more fine grained objects</violation>
      <violation beginline="38" endline="38" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.sizing.TooManyFields" ruleset="All Flex Rules" package="com.bit101.components" class="Slider.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Too many field detected (5 maximum, but 8 actually). Classes that have too many fields could be redesigned to have fewer fields, possibly  through some nested object grouping of some of the information.  For example, a class with  city/state/zipcode fields could instead have one Address field</violation>
      <violation beginline="60" endline="60" begincolumn="19" endcolumn="19" rule="adobe.ac.pmd.rules.performance.HeavyConstructor" ruleset="All Flex Rules" package="com.bit101.components" class="Slider.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Constructor must be as lightweight as possible. No control statement allowed, whereas a cyclomatic complexe of 2 has been detected. The Just-In-Time compiler does not compile constructors. Make them as lightweight as possible, or move the complexity of the code to a method called by the constructor. Then the complexity will be compiled by the JIT</violation>
   </file>
   <file name="C:/Users/simoe/Desktop/WEB Lab/_Flash Experiments/AS3 Advanced Animation/PhysicsSim/src/com/bit101/components/Style.as">
      <violation beginline="33" endline="33" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.asdocs.ClassAsDocMissing" ruleset="All Flex Rules" package="com.bit101.components" class="Style.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">This class ({0}) should be documented with AsDocs.. </violation>
      <violation beginline="33" endline="33" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.sizing.TooManyPublic" ruleset="All Flex Rules" package="com.bit101.components" class="Style.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Too many public fields or functions detected (10 maximum, but 17 actually). A large number of public methods and attributes declared in a class can indicate the class may need to be broken up as increased effort will be required to thoroughly test it</violation>
      <violation beginline="33" endline="33" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.sizing.TooManyFields" ruleset="All Flex Rules" package="com.bit101.components" class="Style.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Too many field detected (5 maximum, but 16 actually). Classes that have too many fields could be redesigned to have fewer fields, possibly  through some nested object grouping of some of the information.  For example, a class with  city/state/zipcode fields could instead have one Address field</violation>
      <violation beginline="35" endline="35" begincolumn="21" endcolumn="21" rule="adobe.ac.pmd.rules.maintanability.AvoidUsingPublicStaticField" ruleset="All Flex Rules" package="com.bit101.components" class="Style.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">If this field (TEXT_BACKGROUND) was meant to be a constant, make it constant. Otherwise, if it is used as a global variable, you may want to redesign this class. </violation>
      <violation beginline="36" endline="36" begincolumn="21" endcolumn="21" rule="adobe.ac.pmd.rules.maintanability.AvoidUsingPublicStaticField" ruleset="All Flex Rules" package="com.bit101.components" class="Style.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">If this field (BACKGROUND) was meant to be a constant, make it constant. Otherwise, if it is used as a global variable, you may want to redesign this class. </violation>
      <violation beginline="37" endline="37" begincolumn="21" endcolumn="21" rule="adobe.ac.pmd.rules.maintanability.AvoidUsingPublicStaticField" ruleset="All Flex Rules" package="com.bit101.components" class="Style.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">If this field (BUTTON_FACE) was meant to be a constant, make it constant. Otherwise, if it is used as a global variable, you may want to redesign this class. </violation>
      <violation beginline="38" endline="38" begincolumn="21" endcolumn="21" rule="adobe.ac.pmd.rules.maintanability.AvoidUsingPublicStaticField" ruleset="All Flex Rules" package="com.bit101.components" class="Style.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">If this field (BUTTON_DOWN) was meant to be a constant, make it constant. Otherwise, if it is used as a global variable, you may want to redesign this class. </violation>
      <violation beginline="39" endline="39" begincolumn="21" endcolumn="21" rule="adobe.ac.pmd.rules.maintanability.AvoidUsingPublicStaticField" ruleset="All Flex Rules" package="com.bit101.components" class="Style.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">If this field (INPUT_TEXT) was meant to be a constant, make it constant. Otherwise, if it is used as a global variable, you may want to redesign this class. </violation>
      <violation beginline="40" endline="40" begincolumn="21" endcolumn="21" rule="adobe.ac.pmd.rules.maintanability.AvoidUsingPublicStaticField" ruleset="All Flex Rules" package="com.bit101.components" class="Style.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">If this field (LABEL_TEXT) was meant to be a constant, make it constant. Otherwise, if it is used as a global variable, you may want to redesign this class. </violation>
      <violation beginline="41" endline="41" begincolumn="21" endcolumn="21" rule="adobe.ac.pmd.rules.maintanability.AvoidUsingPublicStaticField" ruleset="All Flex Rules" package="com.bit101.components" class="Style.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">If this field (DROPSHADOW) was meant to be a constant, make it constant. Otherwise, if it is used as a global variable, you may want to redesign this class. </violation>
      <violation beginline="42" endline="42" begincolumn="21" endcolumn="21" rule="adobe.ac.pmd.rules.maintanability.AvoidUsingPublicStaticField" ruleset="All Flex Rules" package="com.bit101.components" class="Style.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">If this field (PANEL) was meant to be a constant, make it constant. Otherwise, if it is used as a global variable, you may want to redesign this class. </violation>
      <violation beginline="43" endline="43" begincolumn="21" endcolumn="21" rule="adobe.ac.pmd.rules.maintanability.AvoidUsingPublicStaticField" ruleset="All Flex Rules" package="com.bit101.components" class="Style.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">If this field (PROGRESS_BAR) was meant to be a constant, make it constant. Otherwise, if it is used as a global variable, you may want to redesign this class. </violation>
      <violation beginline="44" endline="44" begincolumn="21" endcolumn="21" rule="adobe.ac.pmd.rules.maintanability.AvoidUsingPublicStaticField" ruleset="All Flex Rules" package="com.bit101.components" class="Style.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">If this field (LIST_DEFAULT) was meant to be a constant, make it constant. Otherwise, if it is used as a global variable, you may want to redesign this class. </violation>
      <violation beginline="45" endline="45" begincolumn="21" endcolumn="21" rule="adobe.ac.pmd.rules.maintanability.AvoidUsingPublicStaticField" ruleset="All Flex Rules" package="com.bit101.components" class="Style.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">If this field (LIST_ALTERNATE) was meant to be a constant, make it constant. Otherwise, if it is used as a global variable, you may want to redesign this class. </violation>
      <violation beginline="46" endline="46" begincolumn="21" endcolumn="21" rule="adobe.ac.pmd.rules.maintanability.AvoidUsingPublicStaticField" ruleset="All Flex Rules" package="com.bit101.components" class="Style.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">If this field (LIST_SELECTED) was meant to be a constant, make it constant. Otherwise, if it is used as a global variable, you may want to redesign this class. </violation>
      <violation beginline="47" endline="47" begincolumn="21" endcolumn="21" rule="adobe.ac.pmd.rules.maintanability.AvoidUsingPublicStaticField" ruleset="All Flex Rules" package="com.bit101.components" class="Style.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">If this field (LIST_ROLLOVER) was meant to be a constant, make it constant. Otherwise, if it is used as a global variable, you may want to redesign this class. </violation>
      <violation beginline="49" endline="49" begincolumn="21" endcolumn="21" rule="adobe.ac.pmd.rules.maintanability.AvoidUsingPublicStaticField" ruleset="All Flex Rules" package="com.bit101.components" class="Style.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">If this field (embedFonts) was meant to be a constant, make it constant. Otherwise, if it is used as a global variable, you may want to redesign this class. </violation>
      <violation beginline="50" endline="50" begincolumn="21" endcolumn="21" rule="adobe.ac.pmd.rules.maintanability.AvoidUsingPublicStaticField" ruleset="All Flex Rules" package="com.bit101.components" class="Style.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">If this field (fontName) was meant to be a constant, make it constant. Otherwise, if it is used as a global variable, you may want to redesign this class. </violation>
      <violation beginline="51" endline="51" begincolumn="21" endcolumn="21" rule="adobe.ac.pmd.rules.maintanability.AvoidUsingPublicStaticField" ruleset="All Flex Rules" package="com.bit101.components" class="Style.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">If this field (fontSize) was meant to be a constant, make it constant. Otherwise, if it is used as a global variable, you may want to redesign this class. </violation>
      <violation beginline="59" endline="59" begincolumn="26" endcolumn="26" rule="adobe.ac.pmd.rules.sizing.TooLongFunction" ruleset="All Flex Rules" package="com.bit101.components" class="Style.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">This function is far too long (20 maximum, but 26 actually). Violations of this rule usually indicate that the method has too much responsibility. Try to reduce the method size by creating helper methods and removing any copy/pasted code</violation>
      <violation beginline="64" endline="64" begincolumn="6" endcolumn="6" rule="adobe.ac.pmd.rules.sizing.TooLongSwitchCase" ruleset="All Flex Rules" package="com.bit101.components" class="Style.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Long switch case detected (3 lines maximum, but 12 actually). A switch case statement should be either empty, or contain a break, or call another method</violation>
   </file>
   <file name="C:/Users/simoe/Desktop/WEB Lab/_Flash Experiments/AS3 Advanced Animation/PhysicsSim/src/com/bit101/components/Text.as">
      <violation beginline="38" endline="38" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.asdocs.ClassAsDocMissing" ruleset="All Flex Rules" package="com.bit101.components" class="Text.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">This class ({0}) should be documented with AsDocs.. </violation>
      <violation beginline="38" endline="38" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.sizing.TooManyFields" ruleset="All Flex Rules" package="com.bit101.components" class="Text.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Too many field detected (5 maximum, but 7 actually). Classes that have too many fields could be redesigned to have fewer fields, possibly  through some nested object grouping of some of the information.  For example, a class with  city/state/zipcode fields could instead have one Address field</violation>
      <violation beginline="65" endline="65" begincolumn="31" endcolumn="31" rule="adobe.ac.pmd.rules.maintanability.UselessOverridenFunction" ruleset="All Flex Rules" package="com.bit101.components" class="Text.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">This method is empty. This should be removed (init). This function is not needed</violation>
   </file>
   <file name="C:/Users/simoe/Desktop/WEB Lab/_Flash Experiments/AS3 Advanced Animation/PhysicsSim/src/com/bit101/components/TextArea.as">
      <violation beginline="35" endline="35" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.asdocs.ClassAsDocMissing" ruleset="All Flex Rules" package="com.bit101.components" class="TextArea.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">This class ({0}) should be documented with AsDocs.. </violation>
   </file>
   <file name="C:/Users/simoe/Desktop/WEB Lab/_Flash Experiments/AS3 Advanced Animation/PhysicsSim/src/com/bit101/components/UISlider.as">
      <violation beginline="35" endline="35" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.asdocs.ClassAsDocMissing" ruleset="All Flex Rules" package="com.bit101.components" class="UISlider.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">This class ({0}) should be documented with AsDocs.. </violation>
      <violation beginline="35" endline="35" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.sizing.TooManyFields" ruleset="All Flex Rules" package="com.bit101.components" class="UISlider.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Too many field detected (5 maximum, but 7 actually). Classes that have too many fields could be redesigned to have fewer fields, possibly  through some nested object grouping of some of the information.  For example, a class with  city/state/zipcode fields could instead have one Address field</violation>
      <violation beginline="54" endline="54" begincolumn="19" endcolumn="19" rule="adobe.ac.pmd.rules.performance.HeavyConstructor" ruleset="All Flex Rules" package="com.bit101.components" class="UISlider.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Constructor must be as lightweight as possible. No control statement allowed, whereas a cyclomatic complexe of 2 has been detected. The Just-In-Time compiler does not compile constructors. Make them as lightweight as possible, or move the complexity of the code to a method called by the constructor. Then the complexity will be compiled by the JIT</violation>
   </file>
   <file name="C:/Users/simoe/Desktop/WEB Lab/_Flash Experiments/AS3 Advanced Animation/PhysicsSim/src/com/bit101/components/VBox.as">
      <violation beginline="37" endline="37" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.asdocs.ClassAsDocMissing" ruleset="All Flex Rules" package="com.bit101.components" class="VBox.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">This class ({0}) should be documented with AsDocs.. </violation>
      <violation beginline="128" endline="128" begincolumn="13" endcolumn="13" rule="adobe.ac.pmd.rules.performance.DeeplyNestedIf" ruleset="All Flex Rules" package="com.bit101.components" class="VBox.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Nested if statements are not a good design. </violation>
   </file>
   <file name="C:/Users/simoe/Desktop/WEB Lab/_Flash Experiments/AS3 Advanced Animation/PhysicsSim/src/com/bit101/components/VRangeSlider.as">
      <violation beginline="33" endline="33" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.asdocs.ClassAsDocMissing" ruleset="All Flex Rules" package="com.bit101.components" class="VRangeSlider.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">This class ({0}) should be documented with AsDocs.. </violation>
   </file>
   <file name="C:/Users/simoe/Desktop/WEB Lab/_Flash Experiments/AS3 Advanced Animation/PhysicsSim/src/com/bit101/components/VScrollBar.as">
      <violation beginline="33" endline="33" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.asdocs.ClassAsDocMissing" ruleset="All Flex Rules" package="com.bit101.components" class="VScrollBar.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">This class ({0}) should be documented with AsDocs.. </violation>
   </file>
   <file name="C:/Users/simoe/Desktop/WEB Lab/_Flash Experiments/AS3 Advanced Animation/PhysicsSim/src/com/bit101/components/VSlider.as">
      <violation beginline="33" endline="33" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.asdocs.ClassAsDocMissing" ruleset="All Flex Rules" package="com.bit101.components" class="VSlider.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">This class ({0}) should be documented with AsDocs.. </violation>
   </file>
   <file name="C:/Users/simoe/Desktop/WEB Lab/_Flash Experiments/AS3 Advanced Animation/PhysicsSim/src/com/bit101/components/VUISlider.as">
      <violation beginline="33" endline="33" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.asdocs.ClassAsDocMissing" ruleset="All Flex Rules" package="com.bit101.components" class="VUISlider.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">This class ({0}) should be documented with AsDocs.. </violation>
   </file>
   <file name="C:/Users/simoe/Desktop/WEB Lab/_Flash Experiments/AS3 Advanced Animation/PhysicsSim/src/com/bit101/components/WheelMenu.as">
      <violation beginline="135" endline="135" begincolumn="38" endcolumn="38" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="com.bit101.components" class="WheelMenu.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="135" endline="135" begincolumn="58" endcolumn="58" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="com.bit101.components" class="WheelMenu.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="256" endline="256" begincolumn="38" endcolumn="38" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="com.bit101.components" class="WheelMenu.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="42" endline="42" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.asdocs.ClassAsDocMissing" ruleset="All Flex Rules" package="com.bit101.components" class="WheelMenu.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">This class ({0}) should be documented with AsDocs.. </violation>
      <violation beginline="42" endline="42" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.sizing.TooManyFields" ruleset="All Flex Rules" package="com.bit101.components" class="WheelMenu.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Too many field detected (5 maximum, but 11 actually). Classes that have too many fields could be redesigned to have fewer fields, possibly  through some nested object grouping of some of the information.  For example, a class with  city/state/zipcode fields could instead have one Address field</violation>
      <violation beginline="65" endline="65" begincolumn="19" endcolumn="19" rule="adobe.ac.pmd.rules.performance.HeavyConstructor" ruleset="All Flex Rules" package="com.bit101.components" class="WheelMenu.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Constructor must be as lightweight as possible. No control statement allowed, whereas a cyclomatic complexe of 2 has been detected. The Just-In-Time compiler does not compile constructors. Make them as lightweight as possible, or move the complexity of the code to a method called by the constructor. Then the complexity will be compiled by the JIT</violation>
      <violation beginline="104" endline="104" begincolumn="29" endcolumn="29" rule="adobe.ac.pmd.rules.performance.AvoidInstanciationInLoop" ruleset="All Flex Rules" package="com.bit101.components" class="WheelMenu.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Instanciating a variable in a loop can be expensive. </violation>
   </file>
   <file name="C:/Users/simoe/Desktop/WEB Lab/_Flash Experiments/AS3 Advanced Animation/PhysicsSim/src/com/bit101/components/Window.as">
      <violation beginline="41" endline="41" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.asdocs.ClassAsDocMissing" ruleset="All Flex Rules" package="com.bit101.components" class="Window.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">This class ({0}) should be documented with AsDocs.. </violation>
      <violation beginline="41" endline="41" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.sizing.TooManyFields" ruleset="All Flex Rules" package="com.bit101.components" class="Window.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Too many field detected (5 maximum, but 13 actually). Classes that have too many fields could be redesigned to have fewer fields, possibly  through some nested object grouping of some of the information.  For example, a class with  city/state/zipcode fields could instead have one Address field</violation>
      <violation beginline="83" endline="83" begincolumn="31" endcolumn="31" rule="adobe.ac.pmd.rules.sizing.TooLongFunction" ruleset="All Flex Rules" package="com.bit101.components" class="Window.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">This function is far too long (20 maximum, but 38 actually). Violations of this rule usually indicate that the method has too much responsibility. Try to reduce the method size by creating helper methods and removing any copy/pasted code</violation>
   </file>
   <file name="C:/Users/simoe/Desktop/WEB Lab/_Flash Experiments/AS3 Advanced Animation/PhysicsSim/src/esimov/physics/EulerIntegrator.as">
      <violation beginline="6" endline="6" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.asdocs.ClassAsDocMissing" ruleset="All Flex Rules" package="esimov.physics" class="EulerIntegrator.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">This class ({0}) should be documented with AsDocs.. </violation>
      <violation beginline="41" endline="41" begincolumn="38" endcolumn="38" rule="adobe.ac.pmd.rules.performance.AvoidInstanciationInLoop" ruleset="All Flex Rules" package="esimov.physics" class="EulerIntegrator.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Instanciating a variable in a loop can be expensive. </violation>
      <violation beginline="42" endline="42" begincolumn="38" endcolumn="38" rule="adobe.ac.pmd.rules.performance.AvoidInstanciationInLoop" ruleset="All Flex Rules" package="esimov.physics" class="EulerIntegrator.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Instanciating a variable in a loop can be expensive. </violation>
   </file>
   <file name="C:/Users/simoe/Desktop/WEB Lab/_Flash Experiments/AS3 Advanced Animation/PhysicsSim/src/FreeFloatingTest.as">
      <violation beginline="21" endline="21" begincolumn="16" endcolumn="16" rule="adobe.ac.pmd.rules.maintanability.NonStaticConstantField" ruleset="All Flex Rules" package="" class="FreeFloatingTest.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="1">A constant field should be static (SWF_WIDTH). </violation>
      <violation beginline="22" endline="22" begincolumn="16" endcolumn="16" rule="adobe.ac.pmd.rules.maintanability.NonStaticConstantField" ruleset="All Flex Rules" package="" class="FreeFloatingTest.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="1">A constant field should be static (SWF_HEIGHT). </violation>
      <violation beginline="34" endline="34" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.unused.UnusedField" ruleset="All Flex Rules" package="" class="FreeFloatingTest.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="1">This private attribute (preloader) does not seem to be used. </violation>
      <violation beginline="35" endline="35" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.unused.UnusedField" ruleset="All Flex Rules" package="" class="FreeFloatingTest.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="1">This private attribute (bitmapData) does not seem to be used. </violation>
      <violation beginline="19" endline="19" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.asdocs.ClassAsDocMissing" ruleset="All Flex Rules" package="" class="FreeFloatingTest.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">This class ({0}) should be documented with AsDocs.. </violation>
      <violation beginline="19" endline="19" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.sizing.TooManyFields" ruleset="All Flex Rules" package="" class="FreeFloatingTest.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Too many field detected (5 maximum, but 10 actually). Classes that have too many fields could be redesigned to have fewer fields, possibly  through some nested object grouping of some of the information.  For example, a class with  city/state/zipcode fields could instead have one Address field</violation>
      <violation beginline="63" endline="63" begincolumn="45" endcolumn="45" rule="adobe.ac.pmd.rules.performance.AvoidInstanciationInLoop" ruleset="All Flex Rules" package="" class="FreeFloatingTest.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Instanciating a variable in a loop can be expensive. </violation>
      <violation beginline="71" endline="71" begincolumn="18" endcolumn="18" rule="adobe.ac.pmd.rules.performance.AvoidInstanciationInLoop" ruleset="All Flex Rules" package="" class="FreeFloatingTest.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Instanciating a variable in a loop can be expensive. </violation>
      <violation beginline="75" endline="75" begincolumn="29" endcolumn="29" rule="adobe.ac.pmd.rules.performance.AvoidInstanciationInLoop" ruleset="All Flex Rules" package="" class="FreeFloatingTest.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Instanciating a variable in a loop can be expensive. </violation>
      <violation beginline="88" endline="88" begincolumn="27" endcolumn="27" rule="adobe.ac.pmd.rules.naming.WronglyNamedVariable" ruleset="All Flex Rules" package="" class="FreeFloatingTest.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">This variable (evt) seems to be incorrectly named. Let your creativity flow. </violation>
      <violation beginline="110" endline="110" begincolumn="46" endcolumn="46" rule="adobe.ac.pmd.rules.performance.AvoidInstanciationInLoop" ruleset="All Flex Rules" package="" class="FreeFloatingTest.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Instanciating a variable in a loop can be expensive. </violation>
      <violation beginline="110" endline="110" begincolumn="73" endcolumn="73" rule="adobe.ac.pmd.rules.performance.AvoidInstanciationInLoop" ruleset="All Flex Rules" package="" class="FreeFloatingTest.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Instanciating a variable in a loop can be expensive. </violation>
   </file>
   <file name="C:/Users/simoe/Desktop/WEB Lab/_Flash Experiments/AS3 Advanced Animation/PhysicsSim/src/net/hires/debug/Stats.as">
      <violation beginline="27" endline="27" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.asdocs.ClassAsDocMissing" ruleset="All Flex Rules" package="net.hires.debug" class="Stats.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">This class ({0}) should be documented with AsDocs.. </violation>
      <violation beginline="27" endline="27" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.sizing.TooManyFields" ruleset="All Flex Rules" package="net.hires.debug" class="Stats.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Too many field detected (5 maximum, but 15 actually). Classes that have too many fields could be redesigned to have fewer fields, possibly  through some nested object grouping of some of the information.  For example, a class with  city/state/zipcode fields could instead have one Address field</violation>
      <violation beginline="56" endline="56" begincolumn="19" endcolumn="19" rule="adobe.ac.pmd.rules.style.ConstructorNonEmptyReturnType" ruleset="All Flex Rules" package="net.hires.debug" class="Stats.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">A constructor should not have a return type. Even if this is syntactically correct, there should not be a return type for a constructor</violation>
   </file>
   <file name="C:/Users/simoe/Desktop/WEB Lab/_Flash Experiments/AS3 Advanced Animation/PhysicsSim/src/com/bit101/utils/MinimalConfigurator.as">
      <violation beginline="49" endline="49" begincolumn="17" endcolumn="17" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="com.bit101.utils" class="MinimalConfigurator.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="125" endline="125" begincolumn="17" endcolumn="17" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="com.bit101.utils" class="MinimalConfigurator.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="220" endline="220" begincolumn="20" endcolumn="20" rule="adobe.ac.pmd.rules.unused.UnusedPrivateMethod" ruleset="All Flex Rules" package="com.bit101.utils" class="MinimalConfigurator.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="1">This private method (comprefs) does not seem to be used. </violation>
      <violation beginline="91" endline="91" begincolumn="10" endcolumn="10" rule="adobe.ac.pmd.rules.empty.EmptyCatchStatement" ruleset="All Flex Rules" package="com.bit101.utils" class="MinimalConfigurator.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">This catch statement is empty. </violation>
      <violation beginline="189" endline="189" begincolumn="10" endcolumn="10" rule="adobe.ac.pmd.rules.empty.EmptyCatchStatement" ruleset="All Flex Rules" package="com.bit101.utils" class="MinimalConfigurator.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">This catch statement is empty. </violation>
      <violation beginline="220" endline="220" begincolumn="20" endcolumn="20" rule="adobe.ac.pmd.rules.sizing.TooLongFunction" ruleset="All Flex Rules" package="com.bit101.utils" class="MinimalConfigurator.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">This function is far too long (20 maximum, but 39 actually). Violations of this rule usually indicate that the method has too much responsibility. Try to reduce the method size by creating helper methods and removing any copy/pasted code</violation>
   </file>
   <file name="C:/Users/simoe/Desktop/WEB Lab/_Flash Experiments/AS3 Advanced Animation/PhysicsSim/src/esimov/utils/PreloadProxy.as">
      <violation beginline="30" endline="30" begincolumn="0" endcolumn="226" rule="adobe.ac.pmd.rules.style.OverLongLine" ruleset="All Flex Rules" package="esimov.utils" class="PreloadProxy.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Too long line (200 maximum, but 226 actually). </violation>
      <violation beginline="41" endline="41" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.sizing.TooManyFunction" ruleset="All Flex Rules" package="esimov.utils" class="PreloadProxy.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Too many methods detected (10 maximum, but 24 actually). A class with too many methods is probably a good suspect for refactoring, in order to reduce its complexity and find a way to have more fine grained objects</violation>
      <violation beginline="124" endline="124" begincolumn="19" endcolumn="19" rule="adobe.ac.pmd.rules.performance.HeavyConstructor" ruleset="All Flex Rules" package="esimov.utils" class="PreloadProxy.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Constructor must be as lightweight as possible. No control statement allowed, whereas a cyclomatic complexe of 3 has been detected. The Just-In-Time compiler does not compile constructors. Make them as lightweight as possible, or move the complexity of the code to a method called by the constructor. Then the complexity will be compiled by the JIT</violation>
      <violation beginline="169" endline="169" begincolumn="11" endcolumn="11" rule="adobe.ac.pmd.rules.empty.EmptyCatchStatement" ruleset="All Flex Rules" package="esimov.utils" class="PreloadProxy.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">This catch statement is empty. </violation>
      <violation beginline="205" endline="205" begincolumn="8" endcolumn="8" rule="adobe.ac.pmd.rules.maintanability.TrueFalseCondition" ruleset="All Flex Rules" package="esimov.utils" class="PreloadProxy.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">This test contains a hard coded boolean value. You could remove it by having '!condition'. </violation>
      <violation beginline="219" endline="219" begincolumn="46" endcolumn="46" rule="adobe.ac.pmd.rules.empty.EmptyCatchStatement" ruleset="All Flex Rules" package="esimov.utils" class="PreloadProxy.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">This catch statement is empty. </violation>
   </file>
   <file name="C:/Users/simoe/Desktop/WEB Lab/_Flash Experiments/AS3 Advanced Animation/PhysicsSim/src/esimov/utils/AssetLoader.as">
      <violation beginline="16" endline="16" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="esimov.utils" class="AssetLoader.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="22" endline="22" begincolumn="25" endcolumn="25" rule="adobe.ac.pmd.rules.style.ConstructorNonEmptyReturnType" ruleset="All Flex Rules" package="esimov.utils" class="AssetLoader.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">A constructor should not have a return type. Even if this is syntactically correct, there should not be a return type for a constructor</violation>
   </file>
   <file name="C:/Users/simoe/Desktop/WEB Lab/_Flash Experiments/AS3 Advanced Animation/PhysicsSim/src/esimov/utils/PreLoader.as">
      <violation beginline="267" endline="267" begincolumn="24" endcolumn="24" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="esimov.utils" class="PreLoader.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="313" endline="313" begincolumn="28" endcolumn="28" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="esimov.utils" class="PreLoader.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="359" endline="359" begincolumn="35" endcolumn="35" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="esimov.utils" class="PreLoader.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="406" endline="406" begincolumn="29" endcolumn="29" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="esimov.utils" class="PreLoader.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="96" endline="96" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.sizing.TooManyFunction" ruleset="All Flex Rules" package="esimov.utils" class="PreLoader.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Too many methods detected (10 maximum, but 20 actually). A class with too many methods is probably a good suspect for refactoring, in order to reduce its complexity and find a way to have more fine grained objects</violation>
      <violation beginline="96" endline="96" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.sizing.TooManyFields" ruleset="All Flex Rules" package="esimov.utils" class="PreLoader.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Too many field detected (5 maximum, but 7 actually). Classes that have too many fields could be redesigned to have fewer fields, possibly  through some nested object grouping of some of the information.  For example, a class with  city/state/zipcode fields could instead have one Address field</violation>
      <violation beginline="288" endline="288" begincolumn="8" endcolumn="8" rule="adobe.ac.pmd.rules.performance.DeeplyNestedIf" ruleset="All Flex Rules" package="esimov.utils" class="PreLoader.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Nested if statements are not a good design. </violation>
      <violation beginline="334" endline="334" begincolumn="8" endcolumn="8" rule="adobe.ac.pmd.rules.performance.DeeplyNestedIf" ruleset="All Flex Rules" package="esimov.utils" class="PreLoader.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Nested if statements are not a good design. </violation>
      <violation beginline="380" endline="380" begincolumn="8" endcolumn="8" rule="adobe.ac.pmd.rules.performance.DeeplyNestedIf" ruleset="All Flex Rules" package="esimov.utils" class="PreLoader.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Nested if statements are not a good design. </violation>
      <violation beginline="427" endline="427" begincolumn="8" endcolumn="8" rule="adobe.ac.pmd.rules.performance.DeeplyNestedIf" ruleset="All Flex Rules" package="esimov.utils" class="PreLoader.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Nested if statements are not a good design. </violation>
      <violation beginline="529" endline="529" begincolumn="36" endcolumn="36" rule="adobe.ac.pmd.rules.naming.WronglyNamedVariable" ruleset="All Flex Rules" package="esimov.utils" class="PreLoader.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">This variable (evt) seems to be incorrectly named. Let your creativity flow. </violation>
   </file>
   <file name="C:/Users/simoe/Desktop/WEB Lab/_Flash Experiments/AS3 Advanced Animation/PhysicsSim/src/esimov/physics/Attraction.as">
      <violation beginline="9" endline="9" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.sizing.TooManyFields" ruleset="All Flex Rules" package="esimov.physics" class="Attraction.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Too many field detected (5 maximum, but 6 actually). Classes that have too many fields could be redesigned to have fewer fields, possibly  through some nested object grouping of some of the information.  For example, a class with  city/state/zipcode fields could instead have one Address field</violation>
      <violation beginline="11" endline="11" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="esimov.physics" class="Attraction.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. (p1). </violation>
      <violation beginline="12" endline="12" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="esimov.physics" class="Attraction.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. (p2). </violation>
      <violation beginline="19" endline="19" begincolumn="30" endcolumn="30" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="esimov.physics" class="Attraction.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. (p1). </violation>
      <violation beginline="19" endline="19" begincolumn="43" endcolumn="43" rule="adobe.ac.pmd.rules.naming.VariableNameEndingWithNumeric" ruleset="All Flex Rules" package="esimov.physics" class="Attraction.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Using digits at the end of a symbol does not help understanging the meaning of it. (p2). </violation>
      <violation beginline="19" endline="19" begincolumn="19" endcolumn="19" rule="adobe.ac.pmd.rules.style.ConstructorNonEmptyReturnType" ruleset="All Flex Rules" package="esimov.physics" class="Attraction.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">A constructor should not have a return type. Even if this is syntactically correct, there should not be a return type for a constructor</violation>
   </file>
   <file name="C:/Users/simoe/Desktop/WEB Lab/_Flash Experiments/AS3 Advanced Animation/PhysicsSim/src/esimov/physics/VerletIntegrator.as">
      <violation beginline="12" endline="12" begincolumn="19" endcolumn="19" rule="adobe.ac.pmd.rules.style.ConstructorNonEmptyReturnType" ruleset="All Flex Rules" package="esimov.physics" class="VerletIntegrator.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">A constructor should not have a return type. Even if this is syntactically correct, there should not be a return type for a constructor</violation>
      <violation beginline="19" endline="19" begincolumn="19" endcolumn="19" rule="adobe.ac.pmd.rules.sizing.TooLongFunction" ruleset="All Flex Rules" package="esimov.physics" class="VerletIntegrator.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">This function is far too long (20 maximum, but 21 actually). Violations of this rule usually indicate that the method has too much responsibility. Try to reduce the method size by creating helper methods and removing any copy/pasted code</violation>
   </file>
   <file name="C:/Users/simoe/Desktop/WEB Lab/_Flash Experiments/AS3 Advanced Animation/PhysicsSim/src/esimov/physics/Particle.as">
      <violation beginline="9" endline="9" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.sizing.TooManyPublic" ruleset="All Flex Rules" package="esimov.physics" class="Particle.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Too many public fields or functions detected (10 maximum, but 14 actually). A large number of public methods and attributes declared in a class can indicate the class may need to be broken up as increased effort will be required to thoroughly test it</violation>
      <violation beginline="9" endline="9" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.sizing.TooManyFields" ruleset="All Flex Rules" package="esimov.physics" class="Particle.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Too many field detected (5 maximum, but 6 actually). Classes that have too many fields could be redesigned to have fewer fields, possibly  through some nested object grouping of some of the information.  For example, a class with  city/state/zipcode fields could instead have one Address field</violation>
      <violation beginline="22" endline="22" begincolumn="19" endcolumn="19" rule="adobe.ac.pmd.rules.style.ConstructorNonEmptyReturnType" ruleset="All Flex Rules" package="esimov.physics" class="Particle.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">A constructor should not have a return type. Even if this is syntactically correct, there should not be a return type for a constructor</violation>
      <violation beginline="72" endline="72" begincolumn="30" endcolumn="30" rule="adobe.ac.pmd.rules.sizing.TooManyParameters" ruleset="All Flex Rules" package="esimov.physics" class="Particle.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Long parameter list detected (4 maximum, but 5 actually). Long parameter lists can indicate that a new object should be created to wrap the numerous parameters.  Basically, try to group the parameters together</violation>
      <violation beginline="74" endline="74" begincolumn="11" endcolumn="11" rule="adobe.ac.pmd.rules.switchrules.TooFewBrancheInSwitchStatement" ruleset="All Flex Rules" package="esimov.physics" class="Particle.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">There are too few branches in this switch statement (3 minimum, but 2 actual). Switch statements are designed for complex branches, and allow branches to share treatment. Using a switch for only 2 branches is ill advised, as switches are not as easy to understand as if. In this case, it's most likely is a good idea to use a if statement</violation>
      <violation beginline="78" endline="78" begincolumn="5" endcolumn="5" rule="adobe.ac.pmd.rules.sizing.TooLongSwitchCase" ruleset="All Flex Rules" package="esimov.physics" class="Particle.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Long switch case detected (3 lines maximum, but 23 actually). A switch case statement should be either empty, or contain a break, or call another method</violation>
   </file>
   <file name="C:/Users/simoe/Desktop/WEB Lab/_Flash Experiments/AS3 Advanced Animation/PhysicsSim/src/esimov/utils/AssetLoaderEvent.as">
      <violation beginline="15" endline="15" begincolumn="25" endcolumn="25" rule="adobe.ac.pmd.rules.style.ConstructorNonEmptyReturnType" ruleset="All Flex Rules" package="esimov.utils" class="AssetLoaderEvent.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">A constructor should not have a return type. Even if this is syntactically correct, there should not be a return type for a constructor</violation>
   </file>
   <file name="C:/Users/simoe/Desktop/WEB Lab/_Flash Experiments/AS3 Advanced Animation/PhysicsSim/src/ClothBitmapSim.as">
      <violation beginline="194" endline="194" begincolumn="0" endcolumn="3722" rule="adobe.ac.pmd.rules.style.OverLongLine" ruleset="All Flex Rules" package="" class="ClothBitmapSim.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Too long line (200 maximum, but 3722 actually). </violation>
   </file>
   <file name="C:/Users/simoe/Desktop/WEB Lab/_Flash Experiments/AS3 Advanced Animation/PhysicsSim/src/Main.as">
      <violation beginline="194" endline="194" begincolumn="0" endcolumn="3722" rule="adobe.ac.pmd.rules.style.OverLongLine" ruleset="All Flex Rules" package="" class="Main.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Too long line (200 maximum, but 3722 actually). </violation>
   </file>
</pmd>
